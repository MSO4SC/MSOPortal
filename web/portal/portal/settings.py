"""
Django settings for portal project.

Generated by 'django-admin startproject' using Django 1.11.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import csv
import os

from decouple import Csv, config
from django.contrib.messages import constants as message_constants

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

SECRET_KEY = os.getenv('SECRET_KEY', config('SECRET_KEY'))

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DEBUG')
if DEBUG is None:
    DEBUG = config('DEBUG', default=False, cast=bool)
else:
    DEBUG = DEBUG.lower() in ('true', 'True')

ALLOWED_HOSTS = os.getenv('ALLOWED_HOSTS')
if ALLOWED_HOSTS is None:
    ALLOWED_HOSTS = config('ALLOWED_HOSTS', cast=Csv())
else:
    # one line csv cast
    ALLOWED_HOSTS = list(csv.reader([ALLOWED_HOSTS]))[0]
INTERNAL_IPS = (
    '127.0.0.1', 'localhost'
)

# Application definition

INSTALLED_APPS = [
    'sso.apps.SsoConfig',
    'experimentstool.apps.ExperimentstoolConfig',
    'remotedesktops.apps.RemotedesktopsConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'social_django',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'social_django.middleware.SocialAuthExceptionMiddleware',

    'portal.middleware.RedirectOnCancelMiddleware'
]

ROOT_URLCONF = 'portal.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'portal/templates'),
                 os.path.join(BASE_DIR, 'sso/templates'),
                 os.path.join(BASE_DIR, 'experimentstool/templates'),
                 os.path.join(BASE_DIR, 'remotedesktops/templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',

                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
                "portal.context_processors.custom_vars",
            ],
        },
    },
]

WSGI_APPLICATION = 'portal.wsgi.application'

AUTHENTICATION_BACKENDS = (
    'sso.backends.keyrock.KeyrockOAuth2',
    'django.contrib.auth.backends.ModelBackend',
)

SOCIAL_AUTH_PIPELINE = (
    'social_core.pipeline.social_auth.social_details',
    'social_core.pipeline.social_auth.social_uid',
    'social_core.pipeline.social_auth.auth_allowed',
    'social_core.pipeline.social_auth.social_user',
    'social_core.pipeline.user.get_username',
    # 'social_core.pipeline.mail.mail_validation',
    'social_core.pipeline.social_auth.associate_by_email',
    'social_core.pipeline.user.create_user',
    'social_core.pipeline.social_auth.associate_user',
    'social_core.pipeline.social_auth.load_extra_data',
    'social_core.pipeline.user.user_details',
)


# Database
DATABASES = {
    'default': {
        'ENGINE': os.getenv('SQL_ENGINE', 'django.db.backends.sqlite3'),
        'NAME': os.getenv(
            'SQL_DATABASE',
            os.path.join(BASE_DIR, 'db.sqlite3')),
        'USER': os.getenv('SQL_USER', 'user'),
        'PASSWORD': os.getenv('SQL_PASSWORD', 'password'),
        'HOST': os.getenv('SQL_HOST', 'localhost'),
        'PORT': os.getenv('SQL_PORT', '5432'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.' +
                'UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.' +
                'MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.' +
                'CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.' +
                'NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-uk'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

PROJECT_ROOT = os.path.abspath(os.path.dirname(__file__))
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, "static/")
STATICFILES_DIRS = (
    os.path.join(PROJECT_ROOT, 'static'),
    os.path.join('experimentstool', 'static')
)

LOGIN_URL = 'login'
LOGOUT_URL = 'logout'
LOGIN_REDIRECT_URL = 'home'

MARKETPLACE_URL = os.getenv('MARKETPLACE_URL', config('MARKETPLACE_URL'))
DATACATALOGUE_URL = os.getenv('DATACATALOGUE_URL', config('DATACATALOGUE_URL'))

ORCHESTRATOR_HOST = os.getenv('ORCHESTRATOR_HOST', config('ORCHESTRATOR_HOST'))
ORCHESTRATOR_USER = os.getenv('ORCHESTRATOR_USER', config('ORCHESTRATOR_USER'))
ORCHESTRATOR_PASS = os.getenv('ORCHESTRATOR_PASS', config('ORCHESTRATOR_PASS'))
ORCHESTRATOR_TENANT = os.getenv(
    'ORCHESTRATOR_TENANT', config('ORCHESTRATOR_TENANT'))

FIWARE_IDM_ENDPOINT = os.getenv(
    'FIWARE_IDM_ENDPOINT', config('FIWARE_IDM_ENDPOINT'))
SOCIAL_AUTH_FIWARE_KEY = os.getenv(
    'SOCIAL_AUTH_FIWARE_KEY', config('SOCIAL_AUTH_FIWARE_KEY'))
SOCIAL_AUTH_FIWARE_SECRET = os.getenv(
    'SOCIAL_AUTH_FIWARE_SECRET', config('SOCIAL_AUTH_FIWARE_SECRET'))

# MESSAGE_LEVEL = message_constants.DEBUG
SOCIAL_AUTH_LOGIN_ERROR_URL = '/login_error/'
SOCIAL_AUTH_LOGIN_REDIRECT_URL = '/'
SOCIAL_AUTH_RAISE_EXCEPTIONS = False
